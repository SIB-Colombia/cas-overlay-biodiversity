<?xml version="1.0" encoding="UTF-8"?>
<!-- | deployerConfigContext.xml centralizes into one file some of the declarative 
	configuration that | all CAS deployers will need to modify. | | This file 
	declares some of the Spring-managed JavaBeans that make up a CAS deployment. 
	| The beans declared in this file are instantiated at context initialization 
	time by the Spring | ContextLoaderListener declared in web.xml. It finds 
	this file because this | file is among those declared in the context parameter 
	"contextConfigLocation". | | By far the most common change you will need 
	to make in this file is to change the last bean | declaration to replace 
	the default authentication handler with | one implementing your approach 
	for authenticating usernames and passwords. + -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


	<util:map id="authenticationHandlersResolvers">
		<entry key-ref="proxyAuthenticationHandler" value-ref="proxyPrincipalResolver" />
		<entry key-ref="primaryAuthenticationHandler" value-ref="primaryPrincipalResolver" />
	</util:map>

	<util:list id="authenticationMetadataPopulators">
		<ref bean="successfulHandlerMetaDataPopulator" />
		<ref bean="rememberMeAuthenticationMetaDataPopulator" />
	</util:list>

	<!-- <bean id="attributeRepository"
		class="org.jasig.services.persondir.support.NamedStubPersonAttributeDao"
		p:backingMap-ref="attrRepoBackingMap" /> -->

	<!-- <alias name="acceptUsersAuthenticationHandler" alias="primaryAuthenticationHandler" 
		/> -->
	<alias name="mongoAuthenticationHandler" alias="primaryAuthenticationHandler" />
	<alias name="personDirectoryPrincipalResolver" alias="primaryPrincipalResolver" />

	<!-- <util:map id="attrRepoBackingMap">
		<entry key="firstName" value="firstName" />
		<entry key="lastName" value="lastName" />
		<entry>
			<key>
				<value>roles</value>
			</key>
			<list>
				<value>user</value>
				<value>reviser</value>
				<value>general_reviser</value>
				<value>administrator</value>
				<value>collection_administrator</value>
			</list>
		</entry>
	</util:map> -->
	
	<bean id="mongo" class="com.mongodb.MongoClient">
		<constructor-arg name="host" value="192.168.99.100" />
		<constructor-arg name="port" value="27017" />
	</bean>
	
	<bean id="attributeRepository" class="org.jasig.services.persondir.support.mongo.MongoPersonAttributeDao">
		<constructor-arg index="0" ref="mongo" />
		<constructor-arg index="1" value="cas" />
		<constructor-arg index="2" value="users" />
		<property name="queryAttributeMapping">
			<map>
				<entry key="username" value="email" />
				<entry key="_id" value="id" />
				<entry key="username" value="email" />
				<entry key="firstname" value="firstname" />
				<entry key="lastname" value="lastname" />
				<entry key="roles" value="roles" />
			</map>
		</property>
		<property name="resultAttributeMapping">
			<map>
				<entry key="_id" value="id" />
				<entry key="email" value="email" />
				<entry key="firstname" value="firstname" />
				<entry key="lastname" value="lastname" />
				<entry key="roles" value="roles" />
			</map>
		</property>
	</bean>
	
	<!--<bean id="attributeRepository" class="org.jasig.services.persondir.support.MongoPersonAttributeDao">
		<constructor-arg index="0" value="192.168.99.100" />
		<constructor-arg index="1" value="27017" />
		<constructor-arg index="2" value="db" />
		<constructor-arg index="3" value="collection" />
	</bean> -->

	<alias name="serviceThemeResolver" alias="themeResolver" />

	<alias name="jsonServiceRegistryDao" alias="serviceRegistryDao" />

	<!-- <alias name="defaultTicketRegistry" alias="ticketRegistry" /> -->
	<!-- <alias name="infinispanTicketRegistry" alias="ticketRegistry" /> -->
	<alias name="couchbaseTicketRegistry" alias="ticketRegistry" />

	<alias name="ticketGrantingTicketExpirationPolicy" alias="grantingTicketExpirationPolicy" />
	<alias name="multiTimeUseOrTimeoutExpirationPolicy" alias="serviceTicketExpirationPolicy" />

	<alias name="anyAuthenticationPolicy" alias="authenticationPolicy" />
	<alias name="acceptAnyAuthenticationPolicyFactory" alias="authenticationPolicyFactory" />

	<bean id="auditTrailManager"
		class="org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager"
		p:entrySeparator="${cas.audit.singleline.separator:|}"
		p:useSingleLine="${cas.audit.singleline:false}" />


	<bean id="primaryAuthenticationHandler"
		class="org.jasig.cas.integration.pac4j.authentication.handler.support.UsernamePasswordWrapperAuthenticationHandler" />

	<!-- Definition for mongodb password encoding -->
	<bean id="mongoPac4jPasswordEncoder"
		class="org.pac4j.http.credentials.password.BasicSaltedSha512PasswordEncoder">
		<property name="salt"
			value="!12!1O~u9=.51~2_1;~:o;8_:!J.:|^c*4;+zF~-.6%!:k5_==!+~%G9_^_S6%3A" />
	</bean>
	
	<!-- <bean id="MongoPersonAttributeDao" class="org.jasig.services.persondir.support.MongoPersonAttributeDao">
	</bean> -->

	<alias name="neverThrottle" alias="authenticationThrottle" />

	<util:list id="monitorsList">
		<ref bean="memoryMonitor" />
		<ref bean="sessionMonitor" />
	</util:list>

	<alias name="defaultPrincipalFactory" alias="principalFactory" />
	<alias name="defaultAuthenticationTransactionManager" alias="authenticationTransactionManager" />
	<alias name="defaultPrincipalElectionStrategy" alias="principalElectionStrategy" />

	<!-- Registry persistance store using mongodb -->
	<alias name="mongoServiceRegistryDao" alias="serviceRegistryDao" />
</beans>